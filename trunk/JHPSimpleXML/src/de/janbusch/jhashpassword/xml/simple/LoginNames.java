//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.12.20 at 07:43:59 PM MEZ 
//

package de.janbusch.jhashpassword.xml.simple;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import org.simpleframework.xml.ElementList;

/**
 * <p>
 * Java class for LoginNames complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="LoginNames">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="LoginName" type="{hp:HashPassword}LoginName" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public class LoginNames implements Serializable{

	/**
	 * SerialVersionUID
	 */
	private static final long serialVersionUID = -5722691359316649699L;

	@ElementList(entry = "LoginName", inline = true, required = false)
	private List<LoginName> loginName;

	/**
	 * Gets the value of the loginName property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the loginName property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getLoginName().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link LoginName }
	 * 
	 * 
	 */
	public List<LoginName> getLoginName() {
		if (loginName == null) {
			this.loginName = new ArrayList<LoginName>();
		}
		return this.loginName;
	}

	public LoginName getLoginNameByName(String loginName) {
		if (loginName == null) {
			this.loginName = new ArrayList<LoginName>();
		}
		for (LoginName objLoginName : this.loginName) {
			if (objLoginName.getName().equals(loginName)) {
				return objLoginName;
			}
		}
		return null;
	}

}
